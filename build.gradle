plugins {
    id("maven-publish")
    id("java-library")
    id("gronk").version("latest.release")
}

group("net.auoeke")
version("4.5.4")

javaVersion(17)

configurations {
    testAnnotationProcessor {
        extendsFrom(annotationProcessor)
    }
}

repositories {
    maven("maven.auoeke.net")
}

dependencies {
    annotationProcessor(project(":lib"), project(path: ":lib", configuration: "shadow"))
    api("net.gudenau.lib:unsafe")

    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testImplementation("org.ow2.asm:asm")
    testImplementation("org.ow2.asm:asm-tree")
    testImplementation("org.openjdk.jol:jol-core")
}

compileTestJava {
    options.compilerArgs << "--enable-preview"
}

test {
    dependsOn(cleanTest)

    useJUnitPlatform()
    systemProperty("junit.jupiter.testclass.order.default", 'org.junit.jupiter.api.ClassOrderer$OrderAnnotation')
}

jar {
    manifest.from("resources/META-INF/MANIFEST.MF")
}

// For Reflect::instrumentation.
task testRelease(type: Test) {
    group(LifecycleBasePlugin.VERIFICATION_GROUP)
    dependsOn(cleanTestRelease, test, jar)

    useJUnitPlatform()
    systemProperty("junit.jupiter.testclass.order.default", 'org.junit.jupiter.api.ClassOrderer$OrderAnnotation')
    classpath = classpath - sourceSets.main.output + files(jar.archiveFile)
}

publishing {
    repositories {
        mavenLocal()

        maven("maven.auoeke.net") {
            username(systemProperty("maven.username"))
            password(systemProperty("maven.password"))
        }
    }
}
